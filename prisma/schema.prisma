// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String  @db.VarChar(35)
  email    String  @db.VarChar(30)
  username String  @db.VarChar(30)
  password String  @db.VarChar(20)
  token    String? @unique

  Tweets   Tweet[]
  Retweet  Retweet[]
  Follower Follower[] @relation("follower")
  Followed Follower[] @relation("followed")

  LikesToUser Like[]

  @@map("user")
}

model Tweet {
  id      String @id @default(uuid())
  content String @db.VarChar
  type    String @db.VarChar(5)

  User   User   @relation(fields: [userId], references: [id])
  userId String

  Retweet Retweet[]

  Likes Like[]

  @@map("tweet")
}

model Retweet {
  id      String @id @default(uuid())
  content String @db.VarChar

  Tweet   Tweet  @relation(fields: [tweetId], references: [id])
  tweetId String

  User   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("retweet")
}

model Like {
  id String @id @default(uuid())

  UserId User @relation(fields: [userId], references: [id])

  TweetId Tweet @relation(fields: [tweetId], references: [id])

  userId  String
  tweetId String

  @@map("likes_to_users")
}

model Follower {
  id String @id @default(uuid())

  User User @relation("follower", fields: [userId], references: [id])

  Follower User @relation("followed", fields: [followerId], references: [id])

  userId     String
  followerId String @unique

  @@map("follower")
}
